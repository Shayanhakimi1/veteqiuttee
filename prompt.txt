> Shayan:
عالی—بر اساس پاسخ‌هایی که دادی، کل منطق بک‌اند را به‌صورت یک پرامپت اجرایی و استاندارد نوشتم تا به هر مولد/دولوپری بدهی و خروجی قابل‌اتکا بگیری. این فقط منطق سرور، دیتابیس، پرداخت، زمان‌بندی، فایل‌ها و پنل ادمین است؛ خبری از استایل/فرانت نیست.

پرامپت نهایی (برای تولید بک‌اند)

شما باید یک بک‌اند کامل، امن و قابل توسعه برای یک اپلیکیشن مشاوره تلفنی حیوانات خانگی توسعه دهید. فناوری‌ها: Node.js (LTS 18 یا 20)، TypeScript، Express، PostgreSQL، Prisma ORM. معماری API: REST روی /api/v1. خروجی باید شامل کد اجرایی، اسکیما، مهاجرت‌ها، تست‌ها و مستندات OpenAPI/Swagger باشد.

الزامات کلان
- Auth: ورود/ثبت‌نام با موبایل و رمز عبور (بدون OTP). ثبت‌نام = لاگین خودکار. احراز با JWT (Access + Refresh) در HttpOnly Secure SameSite=Lax cookies. Hash پسورد با Argon2id.
- فایل‌ها: آپلود به S3-compatible (R2/MinIO/S3) با pre-signed URL. در Dev می‌تواند لوکال باشد. محدودیت MIME/سایز و شمارش رعایت شود.
- زمان‌بندی مشاوره: فقط روزهای فرد هفته (به‌صورت پیش‌فرض شنبه/دوشنبه/چهارشنبه، Asia/Tehran)، بازه 17:00 تا 21:00، اسلات 30 دقیقه. ظرفیت اسلات برابر با تعداد دکترهای فعال. رزرو موقت 15 دقیقه (hold). تعطیلات هم مجاز هستند.
- پرداخت: Zarinpal (فعلاً غیرفعال؛ حالت MOCK تعبیه شود). واحد نمایش تومان؛ درگاه اگر نیاز داشت، به ریال تبدیل شود (amount_rails = amount_toman*10). سناریو initiate → redirect → callback/verify. پس از موفقیت: تایید پرداخت + تایید نهایی اسلات + ارسال SMS + نوتیف ادمین.
- تمیزکاری: مشاوره‌های نیمه‌کاره (بدون پرداخت) پس از 48 ساعت پاک شوند. هولدهای منقضی، آزاد شوند.
- نرخ‌گذاری: فقط “مشاوره تخصصی” با مبلغ ثابت 280000 تومان.
- اعلان‌ها: SMS به کاربر پس از پرداخت موفق. ادمین هم نوتیف پنلی دریافت کند.
- نقش‌ها: USER, ADMIN, DOCTOR. RBAC روی روت‌ها.
- لاگ‌ها و ممیزی: لاگ ساختاریافته (pino) + جدول AuditLog برای رویدادهای مهم.

مدل داده (Prisma/PostgreSQL)
- User
  - id (cuid یا uuid), role enum [USER, ADMIN, DOCTOR], name, mobile (unique, IR-09… validation سمت سرور), passwordHash, createdAt, updatedAt, lastLoginAt
- Doctor
  - id, userId (FK به User), isActive boolean, displayName
- Pet
  - id, userId (FK), type enum [DOG, CAT, OTHER], name, breed, gender enum [MALE, FEMALE, UNKNOWN], neutered boolean, birthDate? date, createdAt
- Consultation
  - id, userId (FK), petId (FK), type enum [SPECIALIST], status enum [
    DRAFT, DETAILS_SUBMITTED, SLOT_HELD, PAYMENT_INITIATED,
    PAID, SCHEDULED, COMPLETED, CANCELED, EXPIRED
  ],
  - basePriceToman (int, default 280000), currency enum [TOMAN],
  - messageText? (min 20 char اگر موجود باشد), voiceMediaId? (FK به Media),
  - createdAt, updatedAt, expiresAt? (برای پاکسازی درفت‌ها)
- Appointment
  - id, consultationId (FK), doctorId? (nullable, بعداً قابل تخصیص)،
  - startAt (UTC), endAt (UTC), timezone (default “Asia/Tehran”),
  - status enum [HELD, CONFIRMED, CANCELED, COMPLETED],
  - holdExpiresAt (datetime)
- Media (ضمیمه‌ها)
  - id, consultationId (FK), ownerUserId (برای مالکیت)،
  - category enum [AUDIO, VIDEO, DOCUMENT, IMAGE],
  - purpose enum [VOICE_NOTE, MEDICAL_DOC, PET_VIDEO, OTHER],
  - url, mimeType, sizeBytes, durationSec?, width?, height?, createdAt
  - محدودیت‌ها:
    - AUDIO: mp3/m4a/wav تا 10MB
    - VIDEO: mp4 تا 10MB
    - DOCUMENT/IMAGE: jpg/png/pdf تا 5MB
- Payment
  - id, consultationId (FK), userId (FK), provider enum [ZARINPAL, MOCK],
  - amountToman, amountRials, authority?, refId?, status enum [INITIATED, PENDING, VERIFIED, FAILED, EXPIRED, CANCELED],
  - paidAt?, rawRequest JSON, rawResponse JSON, createdAt, updatedAt
- Notification
  - id, targetRole enum [USER, ADMIN, DOCTOR], userId?, payload JSON, type enum [PAYMENT_SUCCESS, NEW_CONSULTATION, SLOT_SELECTED, APPOINTMENT_CONFIRMED], isRead boolean, createdAt
- SMSMessage
  - id, to, body, status enum [QUEUED, SENT, FAILED], providerMessageId?, createdAt, error?
- AuditLog
  - id, actorUserId?, action (string), entityType (string), entityId (string), meta JSON, createdAt
- SystemConfig (optional, یک رکورد)
  - id, tz (“Asia/Tehran”), oddWeekdays int[] (default [6,1,3] یا [Sat, Mon, Wed])، startHour=17, endHour=21, slotIntervalMins=30, slotHoldMins=15, specialistPriceToman=280000

> Shayan:
محدودیت‌ها و اعتبارسنجی
- شماره موبایل: فرمت ایران (^(\\+98|0)?9\\d{9}$). یکتا.
- پسورد: حداقل 8 کاراکتر، complexity مناسب. ذخیره hash با Argon2id.
- Consultation.details: الزام حداقل یکی از messageText یا voiceMediaId.
- Media: enforce MIME/size server-side + تعداد:
  - اسناد پزشکی: حداکثر 5 فایل
  - ویدیو: حداکثر 1
  - صوت: حداکثر 1 (به‌عنوان Voice Note؛ اگر بیشتر لازم شد category=OTHER)
- Slot انتخابی باید:
  - در یکی از روزهای فرد هفته (config) باشد،
  - بین 17:00 و 21:00،
  - در آینده (not past)،
  - ظرفیت با توجه به تعداد Doctors.active پر نشده باشد.

جریان‌های اصلی و ترنزاکشن‌ها

1) ثبت‌نام و ورود
- POST /auth/register {name, mobile, password}
  - ایجاد User، hash پسورد، لاگین خودکار: صدور access/refresh در HttpOnly cookies.
  - Audit: USER_REGISTERED
- POST /auth/login {mobile, password}
  - بررسی hash، صدور توکن‌ها، Rate limit (مثلاً 5/min/IP+mobile)
  - Audit: USER_LOGGED_IN
- POST /auth/refresh, POST /auth/logout

2) مدیریت پت‌ها (مرحله ثبت‌نام)
- POST /pets {type, name, breed, gender, neutered, birthDate?}
- GET/PUT/DELETE با مالکیت کاربر
- پس از ایجاد اولین Pet، کاربر به داشبورد هدایت می‌شود.

3) ایجاد مشاوره تخصصی (از داشبورد)
- POST /consultations {petId, type:"SPECIALIST"}
  - status = DRAFT, basePriceToman=280000
  - Audit: CONSULTATION_CREATED
- PATCH /consultations/:id/details {messageText?, voiceMediaId?, attachments[]?}
  - validate: حداقل یکی از messageText یا voiceMediaId
  - ایجاد Media رکورد برای فایل‌ها (بعد از آپلود موفق)
  - status → DETAILS_SUBMITTED
  - Audit: CONSULTATION_DETAILS_SUBMITTED

4) آپلود فایل‌ها
- GET /uploads/presign?category=AUDIO|VIDEO|DOCUMENT|IMAGE&ext=...&size=...
  - پاسخ: pre-signed data
  - پس از آپلود موفق، کلاینت POST /consultations/:id/attachments برای ثبت متادیتا.
- Rate limit برای presign (مثلاً 20/min/user)

5) مشاهده ظرفیت و انتخاب اسلات
- GET /availability?from=YYYY-MM-DD&to=YYYY-MM-DD
  - خروجی: روزهای مجاز + لیست اسلات‌های نیم‌ساعته 17–21 با فلگ isFull = (appointmentsConfirmed+held >= activeDoctorsCount)
- POST /consultations/:id/hold-slot {startAt}
  - Transaction:
    - validate قوانین روز/بازه/آینده
    - compute capacity = count(Doctor where isActive)
    - countHeld = count(Appointment where startAt==selected and status in [HELD, CONFIRMED])
    - اگر countHeld < capacity:
      - create Appointment {status: HELD, holdExpiresAt: now+15m, endAt=startAt+30m}
      - status consultation → SLOT_HELD
    - else 409 Conflict
  - Audit: SLOT_HELD

6) پرداخت (Zarinpal + MOCK)
- POST /payments/initiate {consultationId}
  - preconditions: consultation.status in [SLOT_HELD, DETAILS_SUBMITTED] و دارای Appointment با status=HELD و hold معتبر
  - create Payment {status: INITIATED, amountToman=280000, amountRials=amountToman*10, provider=env.GW or MOCK}
  - اگر MOCK: برگردان redirectUrl به /payments/mock/{paymentId}
  - اگر Zarinpal: PaymentRequest → authority + redirectUrl (ذخیره authority)
  - consultation.status → PAYMENT_INITIATED
  - Audit: PAYMENT_INITIATED
- GET /payments/callback/zarinpal?Authority=...&Status=OK|NOK
  - اگر NOK: Payment.status=FAILED, آزادسازی اسلات (Appointment.status=CANCELED)، consultation.status=EXPIRED یا DETAILS_SUBMITTED
  - اگر OK: PaymentVerification → اگر موفق:
    - Transaction اتمیک:
      - Payment.status=VERIFIED, set refId, paidAt
      - Appointment.status=CONFIRMED
      - Consultation.status → PAID سپس SCHEDULED (اگر appointment.confirmed)
      - Notification برای ADMIN: NEW_CONSULTATION + SLOT_SELECTED
      - ایجاد SMSMessage QUEUED برای کاربر
    - در صورت شکست: Payment.status=FAILED, آزادسازی اسلات
  - Audit: PAYMENT_VERIFIED یا PAYMENT_FAILED

7) ارسال SMS
- Job Queue (BullMQ/Redis):
  - Worker ارسال SMS: مصرف‌کننده SMSMessage با status=QUEUED
  - بدنه پیش‌فرض پیام (قابل تنظیم): 
    “پرداخت شما برای مشاوره تخصصی ثبت شد. زمان: {date} ساعت {time}. شناسه: {consultationId}. ممنونیم.”
  - پس از موفقیت: status=SENT, در خطا: FAILED با error

> Shayan:
8) تمیزکاری دوره‌ای (Cron Jobs)
- هر 5 دقیقه: آزادسازی هولدهای منقضی (Appointment.status=HELD و holdExpiresAt < now → CANCELED؛ Consultation اگر PAYMENT_INITIATED نبود به DETAILS_SUBMITTED برگردد)
- روزانه: حذف مشاوره‌های DRAFT/DETAILS_SUBMITTED قدیمی‌تر از 48 ساعت که پرداختی ندارند (soft delete یا hard delete؛ ترجیحاً soft با فیلد deletedAt)
- روزانه: بستن پرداخت‌های INITIATED قدیمی به EXPIRED

9) پنل ادمین (فقط منطق و API)
- RBAC: فقط ADMIN
- GET /admin/consultations?status=&from=&to=&mobile=&petType=
  - شامل user, pet, appointment, payment, media
- GET /admin/consultations/:id (جزییات کامل + لینک‌های دانلود امن با مدت محدود)
- PATCH /admin/consultations/:id
  - قابلیت: تغییر status (SCHEDULED/COMPLETED/CANCELED)، تغییر doctorId، تغییر زمان (re-hold یا confirm)
- GET /admin/payments?status=&from=&to=&mobile=
- GET /admin/users?mobile=&name=
- اکسپورت:
  - GET /admin/export/consultations.csv
  - GET /admin/export/payments.csv
- نوتیفیکیشن پنلی:
  - GET /admin/notifications (لیست)، PATCH /admin/notifications/:id/read

امنیت، پایداری، بهترین‌پرکتیس‌ها
- Helmet, CORS (با allowlist origin), rate-limit روی auth و upload.
- ولیدیشن ورودی با Zod/Valibot + dto لایه‌بندی شده.
- استفاده از express-async-errors و error middleware با فرمت خطای یکنواخت:
  {ok:false, error:{code:string, message:string, details?:any}}
- تراکنش‌های Prisma برای عملیات حساس (hold-slot، verify-payment).
- قفل خوش‌خیم ظرفیت: چک ظرفیت + درج Appointment در یک تراکنش. در صورت رقابت، 409.
- ذخیره زمان‌ها UTC؛ تبدیل به Asia/Tehran در لایه API.
- لاگ ساختاریافته با pino (+requestId). لاگ اقدامات مهم در AuditLog.
- فایل‌ها: فقط URL امضاشده 15 دقیقه‌ای برای دانلود/آپلود. ذخیره MIME، سایز، مدت (برای صوت/ویدیو).
- حذف/بستن منابع در update/delete ها (cascade محدود).
- تست:
  - Unit برای سرویس‌ها (auth, availability, payments mock)
  - Integration با Prisma Test DB
  - Contract با Swagger/OpenAPI (auto-gen)
- پوشش خطاهای درگاه (timeout/retry/backoff) در حالت واقعی.
- Environment flags برای MOCK_GATEWAY و LOCAL_STORAGE.

قرارداد API (خلاصه مهم‌ترین‌ها)
- Auth
  - POST /auth/register
  - POST /auth/login
  - POST /auth/refresh
  - POST /auth/logout
  - GET /me
- Pets
  - POST /pets, GET /pets, GET /pets/:id, PUT /pets/:id, DELETE /pets/:id
- Consultations
  - POST /consultations {petId, type:"SPECIALIST"}
  - GET /consultations (لیست کاربر)
  - GET /consultations/:id
  - PATCH /consultations/:id/details
  - POST /consultations/:id/hold-slot {startAt}
- Uploads/Media
  - GET /uploads/presign
  - POST /consultations/:id/attachments
- Availability
  - GET /availability?from&to
- Payments
  - POST /payments/initiate {consultationId}
  - GET /payments/callback/zarinpal
  - GET /payments/mock/:paymentId (dev only)
- Notifications (user/admin)
  - GET /notifications (براساس نقش)
  - PATCH /notifications/:id/read
- Admin
  - GET /admin/consultations, GET /admin/consultations/:id
  - PATCH /admin/consultations/:id
  - GET /admin/payments
  - GET /admin/users
  - GET /admin/export/consultations.csv
  - GET /admin/export/payments.csv

منطق وضعیت‌ها (State Machine)
- Consultation:
  - DRAFT → DETAILS_SUBMITTED → SLOT_HELD → PAYMENT_INITIATED → PAID → SCHEDULED → COMPLETED
  - هرجا پرداخت یا هولد شکست بخورد: → CANCELED/EXPIRED
- Appointment:
  - HELD → (verify success) CONFIRMED → COMPLETED | CANCELED (ادمین یا شکست پرداخت)
- Payment:
  - INITIATED → PENDING → VERIFIED | FAILED | EXPIRED

تنظیمات و ENV
- DATABASE_URL=postgres://…
- JWT_ACCESS_SECRET, JWT_REFRESH_SECRET, ACCESS_TTL=15m, REFRESH_TTL=30d
- S3_ENDPOINT, S3_BUCKET, S3_ACCESS_KEY, S3_SECRET_KEY
- MOCK_GATEWAY=true|false
- ZARINPAL_MERCHANT_ID=…
- TZ=Asia/Tehran
- ODD_WEEK_DAYS=“sat,mon,wed”
- SLOT_START_HOUR=17, SLOT_END_HOUR=21, SLOT_INTERVAL=30, SLOT_HOLD_MINS=15
- SPECIALIST_PRICE_TOMAN=280000
- SMS_PROVIDER=…, SMS_API_KEY=…, SMS_SENDER=…

> Shayan:
پذیرش/تحویل
- اسکیما Prisma و مایگریشن‌ها کامل.
- Swagger در /docs با همه روت‌ها و نمونه‌ها.
- تست‌های Unit/Integration پایه برای سناریوهای:
  - ثبت‌نام/ورود
  - ایجاد مشاوره → ثبت جزییات → هولد اسلات → پرداخت موفق (MOCK) → تایید اسلات → ارسال SMS
  - رقابت رزرو اسلات (ظرفیت)
  - تمیزکاری اتومات
- اسکریپت‌های npm:
  - dev, build, start, test, db:migrate, db:seed, queue:worker, cron:runner

نکات اجرایی
- تعداد دکترها از تعداد User با role=DOCTOR و isActive=true محاسبه می‌شود. ظرفیت اسلات = همین عدد.
- انتساب doctorId به Appointment می‌تواند:
  - یا هنگام تایید پرداخت به‌صورت round-robin از دکترهای فعال،
  - یا توسط ادمین در پنل بعداً اعمال شود (پیاده‌سازی هر دو امکان‌پذیر؛ default: round-robin).
- اگر mapping “روزهای فرد هفته” متفاوت مدنظر است، ODD_WEEK_DAYS را تغییر بدهید.

این پرامپت را مستقیماً به مدل/دولوپر بده؛ خروجی باید بک‌اند کامل و آماده استقرار باشد. اگر بخواهی، می‌تونم نسخه کوتاه‌تر “Acceptance Criteria” هم کنار این آماده کنم یا روی هر بخش (پرداخت، زمان‌بندی یا فایل‌ها) تمرکز و به کد نهایی تبدیلش کنم.

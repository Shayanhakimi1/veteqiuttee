version: '3.8'

services:
  # Database
  database:
    image: postgres:15-alpine
    container_name: pet-consultation-db
    environment:
      POSTGRES_DB: pet_consultation
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - pet-consultation-network
    restart: unless-stopped

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: pet-consultation-backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:postgres123@database:5432/pet_consultation
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 7d
      JWT_REFRESH_EXPIRES_IN: 30d
      PORT: 3002
      MAX_FILE_SIZE: 10485760
    volumes:
      - backend_uploads:/app/uploads
    ports:
      - "3002:3002"
    depends_on:
      - database
    networks:
      - pet-consultation-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./pet-consultation
      dockerfile: Dockerfile
    container_name: pet-consultation-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - pet-consultation-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  backend_uploads:
    driver: local

networks:
  pet-consultation-network:
    driver: bridge